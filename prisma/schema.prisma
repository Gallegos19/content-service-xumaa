generator client {
  provider        = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgcrypto]
}

enum ContentType {
  VIDEO
  ARTICLE
  QUIZ
  INTERACTIVE
  OTHER
}

enum DifficultyLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum ContentStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum UserProgressStatus {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
  PAUSED
}

model Topic {
  id               String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String          @db.VarChar(200)
  description      String?         @db.Text
  slug             String          @unique @db.VarChar(200)
  icon_url         String?         @db.VarChar(500)
  color_hex        String          @default("#4CAF50") @db.VarChar(7)
  category         String?         @db.VarChar(100)
  difficulty_level DifficultyLevel @default(BEGINNER)
  target_age_min   Int             @default(8)
  target_age_max   Int             @default(18)
  prerequisites    Json?           @default("[]")
  is_active        Boolean         @default(true)
  sort_order       Int             @default(0)
  created_at       DateTime        @default(now()) @db.Timestamptz(6)
  updated_at       DateTime        @default(now()) @db.Timestamptz(6)
  deleted_at       DateTime?       @db.Timestamptz(6)
  created_by       String?         @db.Uuid
  updated_by       String?         @db.Uuid

  contentTopics    ContentTopic[]
  moduleTopics     ModuleTopic[]
  primaryContents  Content[]        @relation("ContentPrimaryTopic")
}


model Module {
  id               String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String          @db.VarChar(200)
  description      String?         @db.Text
  is_active        Boolean         @default(true)
  created_at       DateTime        @default(now()) @db.Timestamptz(6)
  updated_at       DateTime        @default(now()) @db.Timestamptz(6)
  deleted_at       DateTime?       @db.Timestamptz(6)
  created_by       String?         @db.Uuid
  updated_by       String?         @db.Uuid

  moduleTopics     ModuleTopic[]   @relation("ModuleToTopics")
  moduleContent    ModuleContent[] @relation("ModuleToContent")
}


model ModuleTopic {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  module_id  String   @db.Uuid
  topic_id   String   @db.Uuid
  sort_order Int      @default(0)
  created_at DateTime @default(now()) @db.Timestamptz(6)

  module  Module  @relation("ModuleToTopics", fields: [module_id], references: [id], onDelete: Cascade)
  topic   Topic   @relation(fields: [topic_id], references: [id], onDelete: Cascade)

  @@unique([module_id, topic_id])
  @@index([module_id])
  @@index([topic_id])
}

model ModuleContent {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  module_id  String   @db.Uuid
  content_id String   @db.Uuid
  sort_order Int      @default(0)
  created_at DateTime @default(now()) @db.Timestamptz(6)

  module  Module  @relation("ModuleToContent", fields: [module_id], references: [id], onDelete: Cascade)
  content Content @relation("ModuleToContent", fields: [content_id], references: [id], onDelete: Cascade)

  @@unique([module_id, content_id])
  @@index([module_id])
  @@index([content_id])
}

model Content {
  id                   String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title                String          @db.VarChar(255)
  description          String?         @db.Text
  content_type         ContentType
  main_media_id        String?         @db.Uuid
  thumbnail_media_id   String?         @db.Uuid
  difficulty_level     DifficultyLevel @default(BEGINNER)
  target_age_min       Int             @default(8)
  target_age_max       Int             @default(18)
  reading_time_minutes Int?
  duration_minutes     Int?
  is_downloadable      Boolean         @default(false)
  is_featured          Boolean         @default(false)
  view_count           Int             @default(0)
  completion_count     Int             @default(0)
  rating_average       Float?          @default(0.0)
  rating_count         Int             @default(0)
  topic_id String?     @map("topic_id") @db.Uuid
  primaryTopic         Topic?           @relation("ContentPrimaryTopic", fields: [topic_id], references: [id])
  metadata             Json?           @default("{}")
  is_published         Boolean         @default(false)
  published_at         DateTime?       @db.Timestamptz(6)
  created_at           DateTime        @default(now()) @db.Timestamptz(6)
  updated_at           DateTime        @default(now()) @db.Timestamptz(6)
  deleted_at           DateTime?       @db.Timestamptz(6)
  created_by           String?         @db.Uuid
  updated_by           String?         @db.Uuid

  moduleContent    ModuleContent[]   @relation("ModuleToContent")
  contentTopics    ContentTopic[]    @relation("ContentToTopics")
  contentProgress  ContentProgress[] @relation("ContentToProgress")
  tips             Tip[]             @relation("ContentToTips")

  @@index([content_type])
  @@index([is_published])
  @@index([created_at])
  @@index([topic_id])
}


model ContentTopic {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  content_id String   @db.Uuid
  topic_id   String   @db.Uuid
  is_primary Boolean  @default(false)
  created_at DateTime @default(now()) @db.Timestamptz(6)

  content Content @relation("ContentToTopics", fields: [content_id], references: [id], onDelete: Cascade)
  topic   Topic   @relation(fields: [topic_id], references: [id], onDelete: Cascade)

  @@unique([content_id, topic_id])
  @@index([content_id])
  @@index([topic_id])
}

model ContentProgress {
  id                    String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id               String             @db.Uuid
  content_id            String             @db.Uuid
  status                UserProgressStatus @default(NOT_STARTED)
  progress_percentage   Int                @default(0)
  time_spent_seconds    Int                @default(0)
  last_position_seconds Int                @default(0)
  completion_rating     Int?
  completion_feedback   String?            @db.Text
  first_accessed_at     DateTime?          @db.Timestamptz(6)
  last_accessed_at      DateTime?          @db.Timestamptz(6)
  completed_at          DateTime?          @db.Timestamptz(6)
  created_at            DateTime           @default(now()) @db.Timestamptz(6)
  updated_at            DateTime           @default(now()) @db.Timestamptz(6)

  content Content @relation("ContentToProgress", fields: [content_id], references: [id], onDelete: Cascade)

  @@unique([user_id, content_id])
  @@index([content_id])
  @@index([user_id])
  @@index([status])
}

model Tip {
  id                 String    @id @default(uuid())
  title              String
  description        String?
  action_instructions String?
  prerequisites      Json?
  related_tips       Json?
  metadata           Json?
  created_at         DateTime  @default(now())
  updated_at         DateTime  @updatedAt
  deleted_at         DateTime?
  created_by         String?
  updated_by         String?
  content_id         String
  content            Content   @relation("ContentToTips", fields: [content_id], references: [id])
  
  userTipsHistory    UserTipsHistory[]
  
  @@map("tips")
}

model UserTipsHistory {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String   @db.Uuid
  tip_id         String   @db.Uuid
  shown_at       DateTime @default(now()) @db.Timestamptz(6)
  was_read       Boolean  @default(false)
  was_acted_upon Boolean  @default(false)
  user_rating    Int?
  user_feedback  String?  @db.Text
  created_at     DateTime @default(now()) @db.Timestamptz(6)

  tip Tip @relation(fields: [tip_id], references: [id])
}

model ContentInteractionLog {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id            String   @db.Uuid
  content_id         String   @db.Uuid
  session_id         String   @db.VarChar(255)
  action             String   @db.VarChar(100)
  action_timestamp   DateTime @default(now()) @db.Timestamptz(6)
  progress_at_action Decimal? @db.Decimal(10, 2)
  time_spent_seconds Int?     @default(0)
  device_type        String?  @db.VarChar(50)
  platform           String?  @db.VarChar(50)
  abandonment_reason String?  @db.VarChar(100)
  came_from          String?  @db.VarChar(500)
  metadata           Json?    @default("{}")

  @@index([user_id])
  @@index([content_id])
  @@index([session_id])
  @@index([action])
  @@index([action_timestamp])
}
